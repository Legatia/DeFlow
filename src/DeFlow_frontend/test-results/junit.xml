<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="52" failures="41" errors="0" time="0.160910126">
    <testsuite name="src/tests/components/BitcoinNodes.test.tsx" timestamp="2025-08-04T08:27:59.431Z" hostname="macbookair.home" tests="20" failures="9" errors="0" skipped="0" time="0.099811209">
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Portfolio Node &gt; should render portfolio node correctly" time="0.041014917">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Portfolio Node &gt; should handle portfolio refresh" time="0.040813166">
            <failure message="Found multiple elements by: [data-testid=&quot;refresh-portfolio&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;button[39m
  [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
[36m&gt;[39m
  [0mRefresh Portfolio[0m
[36m&lt;/button&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;button[39m
  [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
[36m&gt;[39m
  [0mRefresh Portfolio[0m
[36m&lt;/button&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m22500[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m3[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;refresh-portfolio&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;button
  data-testid=&quot;refresh-portfolio&quot;
&gt;
  Refresh Portfolio
&lt;/button&gt;

Ignored nodes: comments, script, style
&lt;button
  data-testid=&quot;refresh-portfolio&quot;
&gt;
  Refresh Portfolio
&lt;/button&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0.5
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            22500
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            3
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0.5
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            0
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:272:30
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Portfolio Node &gt; should display zero values for empty portfolio" time="0.040827583">
            <failure message="Found multiple elements by: [data-testid=&quot;total-btc&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;div[39m
  [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
[36m&gt;[39m
  [0mTotal BTC: [0m
  [0m0.5[0m
[36m&lt;/div&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;div[39m
  [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
[36m&gt;[39m
  [0mTotal BTC: [0m
  [0m0.5[0m
[36m&lt;/div&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;div[39m
  [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
[36m&gt;[39m
  [0mTotal BTC: [0m
  [0m0[0m
[36m&lt;/div&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m22500[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m3[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;total-btc&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;div
  data-testid=&quot;total-btc&quot;
&gt;
  Total BTC: 
  0.5
&lt;/div&gt;

Ignored nodes: comments, script, style
&lt;div
  data-testid=&quot;total-btc&quot;
&gt;
  Total BTC: 
  0.5
&lt;/div&gt;

Ignored nodes: comments, script, style
&lt;div
  data-testid=&quot;total-btc&quot;
&gt;
  Total BTC: 
  0
&lt;/div&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0.5
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            22500
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            3
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0.5
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            0
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            0
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:294:21
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Send Node &gt; should render send node correctly" time="0.040821042">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Send Node &gt; should handle address input changes" time="0.04080175">
            <failure message="Found multiple elements by: [data-testid=&quot;to-address-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
  [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
  [33mtype[39m=[32m&quot;text&quot;[39m
  [33mvalue[39m=[32m&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;[39m
[36m/&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
  [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
  [33mtype[39m=[32m&quot;text&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m22500[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m3[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node portfolio-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-portfolio-portfolio-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m₿[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Portfolio[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;portfolio-summary&quot;[39m
        [36m&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-btc&quot;[39m
          [36m&gt;[39m
            [0mTotal BTC: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;total-usd&quot;[39m
          [36m&gt;[39m
            [0mTotal USD: $[0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div[39m
            [33mdata-testid[39m=[32m&quot;address-count&quot;[39m
          [36m&gt;[39m
            [0mAddresses: [0m
            [0m0[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;refresh-portfolio&quot;[39m
        [36m&gt;[39m
          [0mRefresh Portfolio[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;portfolio-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;100000&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;to-address-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;to-address-input&quot;
  id=&quot;to-address-send-1&quot;
  placeholder=&quot;Enter Bitcoin address&quot;
  type=&quot;text&quot;
  value=&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;
/&gt;

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;to-address-input&quot;
  id=&quot;to-address-send-1&quot;
  placeholder=&quot;Enter Bitcoin address&quot;
  type=&quot;text&quot;
  value=&quot;&quot;
/&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0.5
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            22500
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            3
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0.5
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            0
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node portfolio-node&quot;
      data-testid=&quot;bitcoin-portfolio-portfolio-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          ₿
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Portfolio
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;portfolio-summary&quot;
        &gt;
          &lt;div
            data-testid=&quot;total-btc&quot;
          &gt;
            Total BTC: 
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;total-usd&quot;
          &gt;
            Total USD: $
            0
          &lt;/div&gt;
          &lt;div
            data-testid=&quot;address-count&quot;
          &gt;
            Addresses: 
            0
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;refresh-portfolio&quot;
        &gt;
          Refresh Portfolio
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;portfolio-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;100000&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:342:31
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Send Node &gt; should handle amount input changes" time="0.023371917">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Send Node &gt; should handle fee priority selection" time="0.02327025">
            <failure message="Found multiple elements by: [data-testid=&quot;fee-priority-select&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;select[39m
  [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
  [33mid[39m=[32m&quot;fee-send-1&quot;[39m
[36m&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;Low&quot;[39m
  [36m&gt;[39m
    [0mLow (~60 min)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;Medium&quot;[39m
  [36m&gt;[39m
    [0mMedium (~30 min)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;High&quot;[39m
  [36m&gt;[39m
    [0mHigh (~10 min)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;Urgent&quot;[39m
  [36m&gt;[39m
    [0mUrgent (~5 min)[0m
  [36m&lt;/option&gt;[39m
[36m&lt;/select&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;select[39m
  [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
  [33mid[39m=[32m&quot;fee-send-1&quot;[39m
[36m&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;Low&quot;[39m
  [36m&gt;[39m
    [0mLow (~60 min)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;Medium&quot;[39m
  [36m&gt;[39m
    [0mMedium (~30 min)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;High&quot;[39m
  [36m&gt;[39m
    [0mHigh (~10 min)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;Urgent&quot;[39m
  [36m&gt;[39m
    [0mUrgent (~5 min)[0m
  [36m&lt;/option&gt;[39m
[36m&lt;/select&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;fee-priority-select&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;select
  data-testid=&quot;fee-priority-select&quot;
  id=&quot;fee-send-1&quot;
&gt;
  &lt;option
    value=&quot;Low&quot;
  &gt;
    Low (~60 min)
  &lt;/option&gt;
  &lt;option
    value=&quot;Medium&quot;
  &gt;
    Medium (~30 min)
  &lt;/option&gt;
  &lt;option
    value=&quot;High&quot;
  &gt;
    High (~10 min)
  &lt;/option&gt;
  &lt;option
    value=&quot;Urgent&quot;
  &gt;
    Urgent (~5 min)
  &lt;/option&gt;
&lt;/select&gt;

Ignored nodes: comments, script, style
&lt;select
  data-testid=&quot;fee-priority-select&quot;
  id=&quot;fee-send-1&quot;
&gt;
  &lt;option
    value=&quot;Low&quot;
  &gt;
    Low (~60 min)
  &lt;/option&gt;
  &lt;option
    value=&quot;Medium&quot;
  &gt;
    Medium (~30 min)
  &lt;/option&gt;
  &lt;option
    value=&quot;High&quot;
  &gt;
    High (~10 min)
  &lt;/option&gt;
  &lt;option
    value=&quot;Urgent&quot;
  &gt;
    Urgent (~5 min)
  &lt;/option&gt;
&lt;/select&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:392:31
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Send Node &gt; should handle invalid amount input gracefully" time="0.023251417">
            <failure message="Found multiple elements by: [data-testid=&quot;amount-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
  [33mid[39m=[32m&quot;amount-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
  [33mtype[39m=[32m&quot;number&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
  [33mid[39m=[32m&quot;amount-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
  [33mtype[39m=[32m&quot;number&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
  [33mid[39m=[32m&quot;amount-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
  [33mtype[39m=[32m&quot;number&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;amount-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;amount-input&quot;
  id=&quot;amount-send-1&quot;
  placeholder=&quot;Amount in satoshis&quot;
  type=&quot;number&quot;
  value=&quot;&quot;
/&gt;

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;amount-input&quot;
  id=&quot;amount-send-1&quot;
  placeholder=&quot;Amount in satoshis&quot;
  type=&quot;number&quot;
  value=&quot;&quot;
/&gt;

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;amount-input&quot;
  id=&quot;amount-send-1&quot;
  placeholder=&quot;Amount in satoshis&quot;
  type=&quot;number&quot;
  value=&quot;&quot;
/&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:417:31
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Address Node &gt; should render address node correctly" time="0.023247125">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Address Node &gt; should handle address type selection" time="0.023220542">
            <failure message="Found multiple elements by: [data-testid=&quot;address-type-select&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;select[39m
  [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
  [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
[36m&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
  [36m&gt;[39m
    [0mP2PKH (Legacy)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
  [36m&gt;[39m
    [0mP2WPKH (SegWit)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;P2TR&quot;[39m
  [36m&gt;[39m
    [0mP2TR (Taproot)[0m
  [36m&lt;/option&gt;[39m
[36m&lt;/select&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;select[39m
  [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
  [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
[36m&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
  [36m&gt;[39m
    [0mP2PKH (Legacy)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
  [36m&gt;[39m
    [0mP2WPKH (SegWit)[0m
  [36m&lt;/option&gt;[39m
  [36m&lt;option[39m
    [33mvalue[39m=[32m&quot;P2TR&quot;[39m
  [36m&gt;[39m
    [0mP2TR (Taproot)[0m
  [36m&lt;/option&gt;[39m
[36m&lt;/select&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node address-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-address-address-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m🏠[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Address[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [0mAddress Type:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
            [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
            [36m&gt;[39m
              [0mP2PKH (Legacy)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
            [36m&gt;[39m
              [0mP2WPKH (SegWit)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2TR&quot;[39m
            [36m&gt;[39m
              [0mP2TR (Taproot)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;generate-address&quot;[39m
        [36m&gt;[39m
          [0mGenerate Address[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;address-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node address-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-address-address-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m🏠[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Address[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [0mAddress Type:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
            [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
            [36m&gt;[39m
              [0mP2PKH (Legacy)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
            [36m&gt;[39m
              [0mP2WPKH (SegWit)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2TR&quot;[39m
            [36m&gt;[39m
              [0mP2TR (Taproot)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;generate-address&quot;[39m
        [36m&gt;[39m
          [0mGenerate Address[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;address-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;address-type-select&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;select
  data-testid=&quot;address-type-select&quot;
  id=&quot;address-type-address-1&quot;
&gt;
  &lt;option
    value=&quot;P2PKH&quot;
  &gt;
    P2PKH (Legacy)
  &lt;/option&gt;
  &lt;option
    value=&quot;P2WPKH&quot;
  &gt;
    P2WPKH (SegWit)
  &lt;/option&gt;
  &lt;option
    value=&quot;P2TR&quot;
  &gt;
    P2TR (Taproot)
  &lt;/option&gt;
&lt;/select&gt;

Ignored nodes: comments, script, style
&lt;select
  data-testid=&quot;address-type-select&quot;
  id=&quot;address-type-address-1&quot;
&gt;
  &lt;option
    value=&quot;P2PKH&quot;
  &gt;
    P2PKH (Legacy)
  &lt;/option&gt;
  &lt;option
    value=&quot;P2WPKH&quot;
  &gt;
    P2WPKH (SegWit)
  &lt;/option&gt;
  &lt;option
    value=&quot;P2TR&quot;
  &gt;
    P2TR (Taproot)
  &lt;/option&gt;
&lt;/select&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node address-node&quot;
      data-testid=&quot;bitcoin-address-address-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          🏠
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Address
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;address-type-address-1&quot;
          &gt;
            Address Type:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;address-type-select&quot;
            id=&quot;address-type-address-1&quot;
          &gt;
            &lt;option
              value=&quot;P2PKH&quot;
            &gt;
              P2PKH (Legacy)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2WPKH&quot;
            &gt;
              P2WPKH (SegWit)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2TR&quot;
            &gt;
              P2TR (Taproot)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;generate-address&quot;
        &gt;
          Generate Address
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;address-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node address-node&quot;
      data-testid=&quot;bitcoin-address-address-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          🏠
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Address
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;address-type-address-1&quot;
          &gt;
            Address Type:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;address-type-select&quot;
            id=&quot;address-type-address-1&quot;
          &gt;
            &lt;option
              value=&quot;P2PKH&quot;
            &gt;
              P2PKH (Legacy)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2WPKH&quot;
            &gt;
              P2WPKH (SegWit)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2TR&quot;
            &gt;
              P2TR (Taproot)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;generate-address&quot;
        &gt;
          Generate Address
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;address-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:462:31
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Address Node &gt; should generate address when button clicked" time="0.012955833">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Address Node &gt; should display generated address" time="0.012938708">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Balance Node &gt; should render balance node correctly" time="0.012931584">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Balance Node &gt; should handle address input for balance check" time="0.012919125">
            <failure message="Found multiple elements by: [data-testid=&quot;check-address-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
  [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
  [33mtype[39m=[32m&quot;text&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
  [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
  [33mtype[39m=[32m&quot;text&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node address-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-address-address-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m🏠[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Address[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [0mAddress Type:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
            [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
            [36m&gt;[39m
              [0mP2PKH (Legacy)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
            [36m&gt;[39m
              [0mP2WPKH (SegWit)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2TR&quot;[39m
            [36m&gt;[39m
              [0mP2TR (Taproot)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;generate-address&quot;[39m
        [36m&gt;[39m
          [0mGenerate Address[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;address-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node address-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-address-address-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m🏠[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Address[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [0mAddress Type:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
            [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
            [36m&gt;[39m
              [0mP2PKH (Legacy)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
            [36m&gt;[39m
              [0mP2WPKH (SegWit)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2TR&quot;[39m
            [36m&gt;[39m
              [0mP2TR (Taproot)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;generate-address&quot;[39m
        [36m&gt;[39m
          [0mGenerate Address[0m
        [36m&lt;/button&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;generated-address&quot;[39m
          [33mdata-testid[39m=[32m&quot;generated-address&quot;[39m
        [36m&gt;[39m
          [36m&lt;strong&gt;[39m
            [0mAddress:[0m
          [36m&lt;/strong&gt;[39m
          [0m [0m
          [0mbcrt1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;address-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node balance-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-balance-balance-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💰[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Balance[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;check-address-balance-1&quot;[39m
          [36m&gt;[39m
            [0mAddress to Check:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
            [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
        [36m&gt;[39m
          [0mCheck Balance[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node balance-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-balance-balance-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💰[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Balance[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;check-address-balance-1&quot;[39m
          [36m&gt;[39m
            [0mAddress to Check:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
            [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
        [36m&gt;[39m
          [0mCheck Balance[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;check-address-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;check-address-input&quot;
  id=&quot;check-address-balance-1&quot;
  placeholder=&quot;Enter Bitcoin address&quot;
  type=&quot;text&quot;
  value=&quot;&quot;
/&gt;

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;check-address-input&quot;
  id=&quot;check-address-balance-1&quot;
  placeholder=&quot;Enter Bitcoin address&quot;
  type=&quot;text&quot;
  value=&quot;&quot;
/&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node address-node&quot;
      data-testid=&quot;bitcoin-address-address-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          🏠
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Address
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;address-type-address-1&quot;
          &gt;
            Address Type:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;address-type-select&quot;
            id=&quot;address-type-address-1&quot;
          &gt;
            &lt;option
              value=&quot;P2PKH&quot;
            &gt;
              P2PKH (Legacy)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2WPKH&quot;
            &gt;
              P2WPKH (SegWit)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2TR&quot;
            &gt;
              P2TR (Taproot)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;generate-address&quot;
        &gt;
          Generate Address
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;address-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node address-node&quot;
      data-testid=&quot;bitcoin-address-address-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          🏠
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Address
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;address-type-address-1&quot;
          &gt;
            Address Type:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;address-type-select&quot;
            id=&quot;address-type-address-1&quot;
          &gt;
            &lt;option
              value=&quot;P2PKH&quot;
            &gt;
              P2PKH (Legacy)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2WPKH&quot;
            &gt;
              P2WPKH (SegWit)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2TR&quot;
            &gt;
              P2TR (Taproot)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;generate-address&quot;
        &gt;
          Generate Address
        &lt;/button&gt;
        &lt;div
          class=&quot;generated-address&quot;
          data-testid=&quot;generated-address&quot;
        &gt;
          &lt;strong&gt;
            Address:
          &lt;/strong&gt;
           
          bcrt1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;address-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node balance-node&quot;
      data-testid=&quot;bitcoin-balance-balance-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💰
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Balance
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;check-address-balance-1&quot;
          &gt;
            Address to Check:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;check-address-input&quot;
            id=&quot;check-address-balance-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;check-balance&quot;
        &gt;
          Check Balance
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;balance-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;balance-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node balance-node&quot;
      data-testid=&quot;bitcoin-balance-balance-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💰
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Balance
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;check-address-balance-1&quot;
          &gt;
            Address to Check:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;check-address-input&quot;
            id=&quot;check-address-balance-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;check-balance&quot;
        &gt;
          Check Balance
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;balance-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;balance-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:557:31
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Balance Node &gt; should check balance when button clicked" time="0.012913">
            <failure message="Found multiple elements by: [data-testid=&quot;check-balance&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;button[39m
  [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
[36m&gt;[39m
  [0mCheck Balance[0m
[36m&lt;/button&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;button[39m
  [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
[36m&gt;[39m
  [0mCheck Balance[0m
[36m&lt;/button&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;button[39m
  [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
[36m&gt;[39m
  [0mCheck Balance[0m
[36m&lt;/button&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node address-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-address-address-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m🏠[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Address[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [0mAddress Type:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
            [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
            [36m&gt;[39m
              [0mP2PKH (Legacy)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
            [36m&gt;[39m
              [0mP2WPKH (SegWit)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2TR&quot;[39m
            [36m&gt;[39m
              [0mP2TR (Taproot)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;generate-address&quot;[39m
        [36m&gt;[39m
          [0mGenerate Address[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;address-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node address-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-address-address-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m🏠[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Address[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [0mAddress Type:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;address-type-select&quot;[39m
            [33mid[39m=[32m&quot;address-type-address-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2PKH&quot;[39m
            [36m&gt;[39m
              [0mP2PKH (Legacy)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2WPKH&quot;[39m
            [36m&gt;[39m
              [0mP2WPKH (SegWit)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;P2TR&quot;[39m
            [36m&gt;[39m
              [0mP2TR (Taproot)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;generate-address&quot;[39m
        [36m&gt;[39m
          [0mGenerate Address[0m
        [36m&lt;/button&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;generated-address&quot;[39m
          [33mdata-testid[39m=[32m&quot;generated-address&quot;[39m
        [36m&gt;[39m
          [36m&lt;strong&gt;[39m
            [0mAddress:[0m
          [36m&lt;/strong&gt;[39m
          [0m [0m
          [0mbcrt1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;address-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node balance-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-balance-balance-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💰[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Balance[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;check-address-balance-1&quot;[39m
          [36m&gt;[39m
            [0mAddress to Check:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
            [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
        [36m&gt;[39m
          [0mCheck Balance[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node balance-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-balance-balance-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💰[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Balance[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;check-address-balance-1&quot;[39m
          [36m&gt;[39m
            [0mAddress to Check:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
            [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
        [36m&gt;[39m
          [0mCheck Balance[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node balance-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-balance-balance-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💰[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Balance[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;check-address-balance-1&quot;[39m
          [36m&gt;[39m
            [0mAddress to Check:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
            [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
        [36m&gt;[39m
          [0mCheck Balance[0m
        [36m&lt;/button&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;check-balance&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;button
  data-testid=&quot;check-balance&quot;
&gt;
  Check Balance
&lt;/button&gt;

Ignored nodes: comments, script, style
&lt;button
  data-testid=&quot;check-balance&quot;
&gt;
  Check Balance
&lt;/button&gt;

Ignored nodes: comments, script, style
&lt;button
  data-testid=&quot;check-balance&quot;
&gt;
  Check Balance
&lt;/button&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node address-node&quot;
      data-testid=&quot;bitcoin-address-address-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          🏠
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Address
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;address-type-address-1&quot;
          &gt;
            Address Type:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;address-type-select&quot;
            id=&quot;address-type-address-1&quot;
          &gt;
            &lt;option
              value=&quot;P2PKH&quot;
            &gt;
              P2PKH (Legacy)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2WPKH&quot;
            &gt;
              P2WPKH (SegWit)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2TR&quot;
            &gt;
              P2TR (Taproot)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;generate-address&quot;
        &gt;
          Generate Address
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;address-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node address-node&quot;
      data-testid=&quot;bitcoin-address-address-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          🏠
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Address
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;address-type-address-1&quot;
          &gt;
            Address Type:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;address-type-select&quot;
            id=&quot;address-type-address-1&quot;
          &gt;
            &lt;option
              value=&quot;P2PKH&quot;
            &gt;
              P2PKH (Legacy)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2WPKH&quot;
            &gt;
              P2WPKH (SegWit)
            &lt;/option&gt;
            &lt;option
              value=&quot;P2TR&quot;
            &gt;
              P2TR (Taproot)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;generate-address&quot;
        &gt;
          Generate Address
        &lt;/button&gt;
        &lt;div
          class=&quot;generated-address&quot;
          data-testid=&quot;generated-address&quot;
        &gt;
          &lt;strong&gt;
            Address:
          &lt;/strong&gt;
           
          bcrt1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;address-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node balance-node&quot;
      data-testid=&quot;bitcoin-balance-balance-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💰
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Balance
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;check-address-balance-1&quot;
          &gt;
            Address to Check:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;check-address-input&quot;
            id=&quot;check-address-balance-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;check-balance&quot;
        &gt;
          Check Balance
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;balance-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;balance-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node balance-node&quot;
      data-testid=&quot;bitcoin-balance-balance-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💰
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Balance
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;check-address-balance-1&quot;
          &gt;
            Address to Check:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;check-address-input&quot;
            id=&quot;check-address-balance-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;check-balance&quot;
        &gt;
          Check Balance
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;balance-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;balance-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node balance-node&quot;
      data-testid=&quot;bitcoin-balance-balance-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💰
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Balance
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;check-address-balance-1&quot;
          &gt;
            Address to Check:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;check-address-input&quot;
            id=&quot;check-address-balance-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;
          /&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;check-balance&quot;
        &gt;
          Check Balance
        &lt;/button&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;balance-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;balance-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:582:30
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Bitcoin Balance Node &gt; should display balance results" time="0.021677709">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Node Integration &gt; should handle node data updates correctly" time="0.021654791">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Node Integration &gt; should maintain node state between renders" time="0.021636875">
            <failure message="Found multiple elements by: [data-testid=&quot;to-address-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
  [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
  [33mtype[39m=[32m&quot;text&quot;[39m
  [33mvalue[39m=[32m&quot;&quot;[39m
[36m/&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;input[39m
  [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
  [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
  [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
  [33mtype[39m=[32m&quot;text&quot;[39m
  [33mvalue[39m=[32m&quot;initial&quot;[39m
[36m/&gt;[39m

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node balance-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-balance-balance-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💰[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mBitcoin Balance[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;check-address-balance-1&quot;[39m
          [36m&gt;[39m
            [0mAddress to Check:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;check-address-input&quot;[39m
            [33mid[39m=[32m&quot;check-address-balance-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;button[39m
          [33mdata-testid[39m=[32m&quot;check-balance&quot;[39m
        [36m&gt;[39m
          [0mCheck Balance[0m
        [36m&lt;/button&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;balance-result&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-result&quot;[39m
        [36m&gt;[39m
          [36m&lt;div&gt;[39m
            [0mBalance: [0m
            [0m50000000[0m
            [0m satoshis[0m
          [36m&lt;/div&gt;[39m
          [36m&lt;div&gt;[39m
            [0mBTC: [0m
            [0m0.5[0m
          [36m&lt;/div&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;balance-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;bitcoin-node send-node&quot;[39m
      [33mdata-testid[39m=[32m&quot;bitcoin-send-send-1&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-header&quot;[39m
      [36m&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-icon&quot;[39m
        [36m&gt;[39m
          [0m💸[0m
        [36m&lt;/span&gt;[39m
        [36m&lt;span[39m
          [33mclass[39m=[32m&quot;node-title&quot;[39m
        [36m&gt;[39m
          [0mSend Bitcoin[0m
        [36m&lt;/span&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-content&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;to-address-send-1&quot;[39m
          [36m&gt;[39m
            [0mTo Address:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;to-address-input&quot;[39m
            [33mid[39m=[32m&quot;to-address-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Enter Bitcoin address&quot;[39m
            [33mtype[39m=[32m&quot;text&quot;[39m
            [33mvalue[39m=[32m&quot;initial&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;amount-send-1&quot;[39m
          [36m&gt;[39m
            [0mAmount (satoshis):[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;input[39m
            [33mdata-testid[39m=[32m&quot;amount-input&quot;[39m
            [33mid[39m=[32m&quot;amount-send-1&quot;[39m
            [33mplaceholder[39m=[32m&quot;Amount in satoshis&quot;[39m
            [33mtype[39m=[32m&quot;number&quot;[39m
            [33mvalue[39m=[32m&quot;&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;form-group&quot;[39m
        [36m&gt;[39m
          [36m&lt;label[39m
            [33mfor[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [0mFee Priority:[0m
          [36m&lt;/label&gt;[39m
          [36m&lt;select[39m
            [33mdata-testid[39m=[32m&quot;fee-priority-select&quot;[39m
            [33mid[39m=[32m&quot;fee-send-1&quot;[39m
          [36m&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Low&quot;[39m
            [36m&gt;[39m
              [0mLow (~60 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Medium&quot;[39m
            [36m&gt;[39m
              [0mMedium (~30 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;High&quot;[39m
            [36m&gt;[39m
              [0mHigh (~10 min)[0m
            [36m&lt;/option&gt;[39m
            [36m&lt;option[39m
              [33mvalue[39m=[32m&quot;Urgent&quot;[39m
            [36m&gt;[39m
              [0mUrgent (~5 min)[0m
            [36m&lt;/option&gt;[39m
          [36m&lt;/select&gt;[39m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;node-handles&quot;[39m
      [36m&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;input-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-input&quot;[39m
        [36m&gt;[39m
          [0mInput[0m
        [36m&lt;/div&gt;[39m
        [36m&lt;div[39m
          [33mclass[39m=[32m&quot;output-handle&quot;[39m
          [33mdata-testid[39m=[32m&quot;send-output&quot;[39m
        [36m&gt;[39m
          [0mOutput[0m
        [36m&lt;/div&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Found multiple elements by: [data-testid=&quot;to-address-input&quot;]

Here are the matching elements:

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;to-address-input&quot;
  id=&quot;to-address-send-1&quot;
  placeholder=&quot;Enter Bitcoin address&quot;
  type=&quot;text&quot;
  value=&quot;&quot;
/&gt;

Ignored nodes: comments, script, style
&lt;input
  data-testid=&quot;to-address-input&quot;
  id=&quot;to-address-send-1&quot;
  placeholder=&quot;Enter Bitcoin address&quot;
  type=&quot;text&quot;
  value=&quot;initial&quot;
/&gt;

(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

Ignored nodes: comments, script, style
&lt;body&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node balance-node&quot;
      data-testid=&quot;bitcoin-balance-balance-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💰
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Bitcoin Balance
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;check-address-balance-1&quot;
          &gt;
            Address to Check:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;check-address-input&quot;
            id=&quot;check-address-balance-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&quot;
          /&gt;
        &lt;/div&gt;
        &lt;button
          data-testid=&quot;check-balance&quot;
        &gt;
          Check Balance
        &lt;/button&gt;
        &lt;div
          class=&quot;balance-result&quot;
          data-testid=&quot;balance-result&quot;
        &gt;
          &lt;div&gt;
            Balance: 
            50000000
             satoshis
          &lt;/div&gt;
          &lt;div&gt;
            BTC: 
            0.5
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;balance-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;balance-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
    &lt;div
      class=&quot;bitcoin-node send-node&quot;
      data-testid=&quot;bitcoin-send-send-1&quot;
    &gt;
      &lt;div
        class=&quot;node-header&quot;
      &gt;
        &lt;span
          class=&quot;node-icon&quot;
        &gt;
          💸
        &lt;/span&gt;
        &lt;span
          class=&quot;node-title&quot;
        &gt;
          Send Bitcoin
        &lt;/span&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-content&quot;
      &gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;to-address-send-1&quot;
          &gt;
            To Address:
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;to-address-input&quot;
            id=&quot;to-address-send-1&quot;
            placeholder=&quot;Enter Bitcoin address&quot;
            type=&quot;text&quot;
            value=&quot;initial&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;amount-send-1&quot;
          &gt;
            Amount (satoshis):
          &lt;/label&gt;
          &lt;input
            data-testid=&quot;amount-input&quot;
            id=&quot;amount-send-1&quot;
            placeholder=&quot;Amount in satoshis&quot;
            type=&quot;number&quot;
            value=&quot;&quot;
          /&gt;
        &lt;/div&gt;
        &lt;div
          class=&quot;form-group&quot;
        &gt;
          &lt;label
            for=&quot;fee-send-1&quot;
          &gt;
            Fee Priority:
          &lt;/label&gt;
          &lt;select
            data-testid=&quot;fee-priority-select&quot;
            id=&quot;fee-send-1&quot;
          &gt;
            &lt;option
              value=&quot;Low&quot;
            &gt;
              Low (~60 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Medium&quot;
            &gt;
              Medium (~30 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;High&quot;
            &gt;
              High (~10 min)
            &lt;/option&gt;
            &lt;option
              value=&quot;Urgent&quot;
            &gt;
              Urgent (~5 min)
            &lt;/option&gt;
          &lt;/select&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div
        class=&quot;node-handles&quot;
      &gt;
        &lt;div
          class=&quot;input-handle&quot;
          data-testid=&quot;send-input&quot;
        &gt;
          Input
        &lt;/div&gt;
        &lt;div
          class=&quot;output-handle&quot;
          data-testid=&quot;send-output&quot;
        &gt;
          Output
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/body&gt;
 ❯ Object.getElementError ../../node_modules/@testing-library/dom/dist/config.js:37:19
 ❯ getElementError ../../node_modules/@testing-library/dom/dist/query-helpers.js:20:35
 ❯ getMultipleElementsFoundError ../../node_modules/@testing-library/dom/dist/query-helpers.js:23:10
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:55:13
 ❯ ../../node_modules/@testing-library/dom/dist/query-helpers.js:95:19
 ❯ src/tests/components/BitcoinNodes.test.tsx:672:31
            </failure>
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Accessibility &gt; should have proper ARIA labels and roles" time="0.021635">
        </testcase>
        <testcase classname="src/tests/components/BitcoinNodes.test.tsx" name="Bitcoin DeFi Workflow Nodes &gt; Accessibility &gt; should support keyboard navigation" time="0.02162875">
        </testcase>
    </testsuite>
    <testsuite name="src/tests/components/WorkflowBuilder.test.tsx" timestamp="2025-08-04T08:27:59.440Z" hostname="macbookair.home" tests="32" failures="32" errors="0" skipped="0" time="0.061098917">
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Rendering &gt; should render workflow builder with all components" time="0.026313542">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Rendering &gt; should render node palette" time="0.026197">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Rendering &gt; should render toolbar with save button" time="0.026182458">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Rendering &gt; should render with initial nodes and edges" time="0.026177584">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Palette &gt; should show node categories" time="0.026168916">
            <system-err>
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}
Error: Uncaught [Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
]
    at reportException (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

    at VitestMocker.createError (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17)
    at Object.get (file:///Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16)
    at WorkflowBuilder [90m(/Users/zhang/Desktop/ICP/DeFlow/src/DeFlow_frontend/[39msrc/components/WorkflowBuilder.tsx:36:44[90m)[39m
    at renderWithHooks (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18)
    at mountIndeterminateComponent (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13)
    at beginWork (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16)
    at HTMLUnknownElement.callCallback (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
    at invokeEventListeners (/Users/zhang/Desktop/ICP/DeFlow/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3) {
  codeFrame: [32m&apos;vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m&quot;reactflow&quot;\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=&gt;\x1B[39m {\n&apos;[39m +
    [32m&apos;  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n&apos;[39m +
    [32m&apos;  \x1B[35mreturn\x1B[39m {\n&apos;[39m +
    [32m&apos;    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n&apos;[39m +
    [32m&apos;    \x1B[90m// your mocked methods\x1B[39m\n&apos;[39m +
    [32m&apos;  }\n&apos;[39m +
    [32m&apos;})&apos;[39m
}

            </system-err>
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Palette &gt; should allow category selection" time="0.006793708">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Palette &gt; should show search functionality" time="0.006754625">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Palette &gt; should support drag and drop from palette" time="0.006743291">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Operations &gt; should save workflow when save button is clicked" time="0.006736042">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Operations &gt; should validate workflow when validate button is clicked" time="0.006724459">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Operations &gt; should clear workflow when clear button is clicked" time="0.00572275">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Operations &gt; should show validation errors" time="0.005694166">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Configuration &gt; should show configuration panel when node is selected" time="0.005690125">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Configuration &gt; should hide configuration panel when no node is selected" time="0.00568125">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Configuration &gt; should update node configuration" time="0.005675958">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Node Configuration &gt; should delete node from configuration panel" time="0.005212375">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Keyboard Shortcuts &gt; should handle save shortcut (Ctrl+S)" time="0.00518975">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Keyboard Shortcuts &gt; should handle delete shortcut when node is selected" time="0.005182834">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Keyboard Shortcuts &gt; should handle undo shortcut (Ctrl+Z)" time="0.005176416">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Keyboard Shortcuts &gt; should handle redo shortcut (Ctrl+Y)" time="0.005158667">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Validation &gt; should validate workflow structure" time="0.0083835">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Validation &gt; should validate node connections" time="0.008369333">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Validation &gt; should validate node configurations" time="0.008362084">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Workflow Validation &gt; should show validation results" time="0.008355875">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Accessibility &gt; should be keyboard navigable" time="0.00834625">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Accessibility &gt; should have proper ARIA labels" time="0.005105375">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Accessibility &gt; should announce status changes to screen readers" time="0.005087791">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Performance &gt; should handle large workflows efficiently" time="0.005079125">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Performance &gt; should not re-render unnecessarily" time="0.005073">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Error Handling &gt; should handle invalid node types gracefully" time="0.005062167">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Error Handling &gt; should handle save errors gracefully" time="0.00280225">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
        <testcase classname="src/tests/components/WorkflowBuilder.test.tsx" name="WorkflowBuilder &gt; Error Handling &gt; should recover from component errors" time="0.002781375">
            <failure message="[vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:
" type="Error">
Error: [vitest] No &quot;useNodesState&quot; export is defined on the &quot;reactflow&quot; mock. Did you forget to return it from &quot;vi.mock&quot;?
If you need to partially mock a module, you can use &quot;importOriginal&quot; helper inside:

vi.mock(import(&quot;reactflow&quot;), async (importOriginal) =&gt; {
  const actual = await importOriginal()
  return {
    ...actual,
    // your mocked methods
  }
})

 ❯ WorkflowBuilder src/components/WorkflowBuilder.tsx:36:44
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom.development.js:15486:18
 ❯ mountIndeterminateComponent ../../node_modules/react-dom/cjs/react-dom.development.js:20103:13
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom.development.js:21626:16
 ❯ beginWork$1 ../../node_modules/react-dom/cjs/react-dom.development.js:27465:14
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom.development.js:26599:12
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom.development.js:26505:5
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom.development.js:26473:7
            </failure>
        </testcase>
    </testsuite>
</testsuites>
